# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login_GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5 import QtCore, QtGui, QtWidgets
import sys
import os
import mysql.connector
import requests
from datetime import datetime
import telegram

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from dashboard import Ui_MainWindow
import FaceRecognition.faces as faces
import FaceRecognition.face_capture as face_capture

myconn = mysql.connector.connect(host="localhost", user="root", passwd="Lamcy#108", database="facerecognition")
cursor = myconn.cursor()
date = datetime.utcnow()


class UI_Form(object):

    def __init__(self):
        self.loginWithFaceIdButton = QtWidgets.QPushButton(Form)
        self.loginWithPasswordButton = QtWidgets.QPushButton(Form)
        self.existingUserLabel = QtWidgets.QLabel(Form)
        self.newUserLabel = QtWidgets.QLabel(Form)
        self.createAccountButton = QtWidgets.QPushButton(Form)
        self.welcomeLabel = QtWidgets.QLabel(Form)
        self.bankPicture = QtWidgets.QLabel(Form)
        self.return_dict = {}
        self.user_details = {}
        self.username = ""
        self.width = 684
        self.height = 549


    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.setEnabled(True)


        Form.resize(self.width, self.height)

        Form.setAutoFillBackground(False)
        Form.setStyleSheet(
            "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(255, 255, 255, 255), "
            "stop:1 rgba(255, 255, 255, 255));")

        self.loginWithFaceIdButton.setGeometry(QtCore.QRect(200, 430, 201, 61))
        self.loginWithFaceIdButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.loginWithFaceIdButton.setObjectName("loginWithFaceIdButton")
        self.loginWithFaceIdButton.clicked.connect(self.login_with_face_id)

        self.loginWithPasswordButton.setGeometry(QtCore.QRect(440, 430, 201, 61))
        self.loginWithPasswordButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.loginWithPasswordButton.setObjectName("loginWithPasswordButton")
        self.loginWithPasswordButton.clicked.connect(self.login_with_password)

        self.existingUserLabel.setGeometry(QtCore.QRect(50, 430, 131, 61))
        self.existingUserLabel.setObjectName("existingUserLabel")

        self.newUserLabel.setGeometry(QtCore.QRect(50, 360, 111, 71))
        self.newUserLabel.setObjectName("newUserLabel")

        self.createAccountButton.setGeometry(QtCore.QRect(200, 370, 441, 51))
        self.createAccountButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.createAccountButton.setObjectName("createAccountButton")
        self.createAccountButton.clicked.connect(self.create_new_user)

        self.welcomeLabel.setGeometry(QtCore.QRect(270, 200, 221, 31))
        self.welcomeLabel.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.welcomeLabel.setObjectName("welcomeLabel")

        self.bankPicture.setGeometry(QtCore.QRect(120, 0, int(self.width//1.5), int(self.height//1.5)))
        self.bankPicture.setText("")
        self.bankPicture.setPixmap(QtGui.QPixmap("Images/logo_final.jpeg"))
        self.bankPicture.setScaledContents(True)
        self.bankPicture.setObjectName("bankPicture")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def login_with_password(self):
        self.login_user_dialog = QtWidgets.QDialog()
        self.login_user_dialog.setWindowTitle("Login")
        self.login_user_dialog.setGeometry(500, 500, 500, 200)

        self.user_name_label = QtWidgets.QLabel(self.login_user_dialog)
        self.user_name_label.setText("Username")
        self.user_name_label.move(20, 20)
        self.user_name_input = QtWidgets.QLineEdit(self.login_user_dialog)
        self.user_name_input.move(120, 20)

        self.password_label = QtWidgets.QLabel(self.login_user_dialog)
        self.password_label.setText("Password")
        self.password_label.move(20, 60)
        self.password_input = QtWidgets.QLineEdit(self.login_user_dialog)
        self.password_input.move(120, 60)

        self.login_user_button = QtWidgets.QPushButton(self.login_user_dialog)
        self.login_user_button.setText("Login")
        self.login_user_button.setGeometry(170, 150, 150, 50)
        self.login_user_button.clicked.connect(self.login_user_handler)

        self.login_user_dialog.exec()

    def login_user_handler(self):
        username = self.user_name_input.text()
        password = self.password_input.text()

        query = "SELECT EXISTS(SELECT 1 FROM Customer WHERE username = '%s')" % (username)

        res = cursor.execute(query)
        result = cursor.fetchall()
        if result[0] == (1,):
            query = "Select password from Customer where username = '%s'" % (username)

            res = cursor.execute(query)
            result = cursor.fetchall()

            if (password,) == result[0]:
                self.login_success_handler(f"Welcome back! {username}", username)
            else:
                self.login_error_handler("Incorrect password!")
        else:
            self.login_error_handler("Username does not exist!")

        self.login_user_dialog.close()

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.loginWithFaceIdButton.setText(_translate("Form", "LOGIN WITH FACEID"))
        self.loginWithFaceIdButton.setStyleSheet("font-weight: bold; background-color: #e4f5f5;")

        self.loginWithPasswordButton.setText(_translate("Form", "LOGIN WITH PASSWORD"))
        self.loginWithPasswordButton.setStyleSheet("font-weight: bold; background-color: #e4f5f5;")


        self.existingUserLabel.setText(_translate("Form", "Existing User?"))

        self.newUserLabel.setText(_translate("Form", "New User?"))

        self.createAccountButton.setText(_translate("Form", "CREATE ACCOUNT"))
        self.createAccountButton.setStyleSheet("font-weight: bold; background-color: #e4f5f5;")


        self.welcomeLabel.setText(_translate("Form", "Welcome to New Generation Bank"))


    def login_error_handler(self, message):
        error_widget = QtWidgets.QMessageBox()
        error_widget.setWindowTitle("Login Failed")
        error_widget.setIcon(QtWidgets.QMessageBox.Critical)
        error_widget.setText(message)

        run = error_widget.exec_()

    def login_success_handler(self, message, username):
        self.username = username
        success_widget = QtWidgets.QMessageBox()
        success_widget.setWindowTitle("Login Success")
        success_widget.setIcon(QtWidgets.QMessageBox.Information)
        success_widget.setText(message)

        run = success_widget.exec_()

        self.show_dashboard()
        self.perform_login_processing()

        Form.close()

    def perform_login_processing(self):

        r = requests.get(
            'https://api.ipdata.co?api-key=9278b0107a8c9709133bcbfa2d8bbd322351f6fe750b32837d542676').json()

        login_city = r['city']

        login_country = r['country_name']
        # Update the data in database
        update = "INSERT into LoginHistory values('%s', '%s', '%s', '%s')" % (
        self.username, date, login_city, login_country)
        cursor.execute(update)
        myconn.commit()

        query = "SELECT telegram_chat_id from Customer where username='%s'" % (self.username)

        name = cursor.execute(query)
        result = cursor.fetchall()
        print(result)

        bot = telegram.Bot(token="2146272419:AAGDSh89UKqIrlW8dlJx3kssS2YSvCdKchU")
        chatID = result[0][0]

        bot.sendMessage(chat_id=chatID,
                        text=f"Hello {self.username}! You recently logged into IKYC at {date} from {login_city}, {login_country}.\nIf this wasn't you, please contact our 24/7 helpline.")

    def show_dashboard(self):
        self.MainWindow = QtWidgets.QMainWindow()
        self.dashboard = Ui_MainWindow(self.username)
        self.dashboard.setupUi(self.MainWindow)
        self.MainWindow.show()

    def login_with_face_id(self, Form):
        self.return_dict = faces.main()
        print(self.return_dict)
        if self.return_dict == {}:
            self.login_error_handler("Retry login")

        elif not self.return_dict["success"]:
            self.login_error_handler(self.return_dict["message"])

        elif self.return_dict["success"]:
            self.login_success_handler(f"Welcome back! {self.return_dict['name']}", self.return_dict['name'])

    def create_new_user(self, Form):
        self.register_user_dialog = QtWidgets.QDialog()
        self.register_user_dialog.setWindowTitle("Register New User")
        self.register_user_dialog.setGeometry(500, 500, 500, 350)

        self.user_name_label = QtWidgets.QLabel(self.register_user_dialog)
        self.user_name_label.setText("Username")
        self.user_name_label.move(20, 20)
        self.user_name_input = QtWidgets.QLineEdit(self.register_user_dialog)
        self.user_name_input.move(135, 20)

        self.first_name_label = QtWidgets.QLabel(self.register_user_dialog)
        self.first_name_label.setText("First Name")
        self.first_name_label.move(20, 60)
        self.first_name_input = QtWidgets.QLineEdit(self.register_user_dialog)
        self.first_name_input.move(135, 60)

        self.middle_name_label = QtWidgets.QLabel(self.register_user_dialog)
        self.middle_name_label.setText("Middle Name")
        self.middle_name_label.move(20, 100)
        self.middle_name_input = QtWidgets.QLineEdit(self.register_user_dialog)
        self.middle_name_input.move(135, 100)

        self.last_name_label = QtWidgets.QLabel(self.register_user_dialog)
        self.last_name_label.setText("Last Name")
        self.last_name_label.move(20, 140)
        self.last_name_input = QtWidgets.QLineEdit(self.register_user_dialog)
        self.last_name_input.move(135, 140)

        self.password_label = QtWidgets.QLabel(self.register_user_dialog)
        self.password_label.setText("Password")
        self.password_label.move(20, 180)
        self.password_input = QtWidgets.QLineEdit(self.register_user_dialog)
        self.password_input.move(135, 180)

        self.telegram_chat_id_label = QtWidgets.QLabel(self.register_user_dialog)
        self.telegram_chat_id_label.setText("Telegram Chat ID")
        self.telegram_chat_id_label.move(20, 220)
        self.telegram_chat_id_label_input = QtWidgets.QLineEdit(self.register_user_dialog)
        self.telegram_chat_id_label_input.move(135, 220)

        self.register_button = QtWidgets.QPushButton(self.register_user_dialog)
        self.register_button.setText("Register User")
        self.register_button.setGeometry(170, 280, 150, 50)
        self.register_button.clicked.connect(self.get_new_user_data)
        self.register_user_dialog.exec()

        if self.user_details != {}:
            self.return_dict = face_capture.main(self.user_details)

    def get_new_user_data(self):
        user_name = self.user_name_input.text()
        password = self.password_input.text()
        first_name = self.first_name_input.text()
        middle_name = self.middle_name_input.text()
        last_name = self.last_name_input.text()
        telegram_chat_id = self.telegram_chat_id_label_input.text()

        query = "SELECT EXISTS(SELECT 1 FROM Customer WHERE username = '%s')" % (user_name)

        res = cursor.execute(query)
        result = cursor.fetchall()
        if result[0] == (1,):
            self.login_error_handler("Username already exists! Pick another")
            return

        self.user_details = {'username': user_name,
                             'password': password,
                             'firstName': first_name,
                             'middleName': middle_name,
                             'lastName': last_name,
                             'telegramChatID' : telegram_chat_id
                             }

        self.register_user_dialog.close()


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = UI_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
